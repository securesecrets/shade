{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "get_min_bin_step"
      ],
      "properties": {
        "get_min_bin_step": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_fee_recipient"
      ],
      "properties": {
        "get_fee_recipient": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_lb_pair_implementation"
      ],
      "properties": {
        "get_lb_pair_implementation": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_lb_token_implementation"
      ],
      "properties": {
        "get_lb_token_implementation": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_number_of_lb_pairs"
      ],
      "properties": {
        "get_number_of_lb_pairs": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_lb_pair_at_index"
      ],
      "properties": {
        "get_lb_pair_at_index": {
          "type": "object",
          "required": [
            "index"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_number_of_quote_assets"
      ],
      "properties": {
        "get_number_of_quote_assets": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_quote_asset_at_index"
      ],
      "properties": {
        "get_quote_asset_at_index": {
          "type": "object",
          "required": [
            "index"
          ],
          "properties": {
            "index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "is_quote_asset"
      ],
      "properties": {
        "is_quote_asset": {
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "token": {
              "$ref": "#/definitions/TokenType"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_lb_pair_information"
      ],
      "properties": {
        "get_lb_pair_information": {
          "type": "object",
          "required": [
            "bin_step",
            "token_x",
            "token_y"
          ],
          "properties": {
            "bin_step": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            },
            "token_x": {
              "$ref": "#/definitions/TokenType"
            },
            "token_y": {
              "$ref": "#/definitions/TokenType"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_preset"
      ],
      "properties": {
        "get_preset": {
          "type": "object",
          "required": [
            "bin_step"
          ],
          "properties": {
            "bin_step": {
              "type": "integer",
              "format": "uint16",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_all_bin_steps"
      ],
      "properties": {
        "get_all_bin_steps": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_open_bin_steps"
      ],
      "properties": {
        "get_open_bin_steps": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_all_lb_pairs"
      ],
      "properties": {
        "get_all_lb_pairs": {
          "type": "object",
          "required": [
            "token_x",
            "token_y"
          ],
          "properties": {
            "token_x": {
              "$ref": "#/definitions/TokenType"
            },
            "token_y": {
              "$ref": "#/definitions/TokenType"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "TokenType": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "custom_token"
          ],
          "properties": {
            "custom_token": {
              "type": "object",
              "required": [
                "contract_addr",
                "token_code_hash"
              ],
              "properties": {
                "contract_addr": {
                  "$ref": "#/definitions/Addr"
                },
                "token_code_hash": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "native_token"
          ],
          "properties": {
            "native_token": {
              "type": "object",
              "required": [
                "denom"
              ],
              "properties": {
                "denom": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}

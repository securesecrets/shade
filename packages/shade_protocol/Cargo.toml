[package]
name = "shade-protocol"
version = "0.1.0"
authors = [
  "Guy Garcia <guysebastiangarcia@gmail.com>",
  "Jackson Swenson <jacksonswenson22@gmail.com>",
  "Kyle Wahlberg <kyle.s.wahlberg@gmail.com>",
  "Jack Sisson <sissonjack67@gmail.com>",
]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["utils"]

# Utils
utils = []
dao-utils = ["snip20"]
errors = []
flexible_msg = []
math = []
storage = []
storage_plus = ["storage", "dep:secret-storage-plus"]
query_auth_lib = ["dep:query-authentication"]
multi-test = ["dep:secret-multi-test", "dep:anyhow", "interface"]
ensemble = ["dep:fadroma"]

# Implementing new contracts:
# Contracts packages are divided by two different features, the interface and the implementation
# When creating a new contract; try to keep all interface (Init, Handle and Query) related content in the `mod.rs` file
# and move all implementation related content into separate files inside the package.
# When defining a new interface, first create a feature that imports this:
#TODO: add admin in here too
interface = ["utils", "errors"]
# Like so
# contract_name = ["interface"]
# Then add the following inside `/src/contract_interfaces/mod.rs`
# #[cfg(feature = "contract_name")]
# pub mod contract_name;

# For the implementation you need to import this in your feature and prepend the feature name with `_impl`
implementation = ["storage_plus", "storage"]
# Like so
# contract_name_impl = ["contract_name", "implementation"]

# TODO: Normalize usage, some features are using - while others use _

# Templates
dex        = ["math", "snip20", "mint", "band", "oracles"]
band       = ["interface"]
secretswap = ["interface"]
sienna     = ["interface", "math"]

# Protocol contracts NOTE: interfaces that have other interfaces as features already automatically have `interface` as a feature
airdrop          = ["query_auth", "snip20"]
bonds            = ["airdrop", "snip20"]
governance       = ["query_auth", "flexible_msg"]
mint             = ["snip20"]
liability_mint   = ["snip20"]
mint_router      = ["snip20"]
oracles          = ["snip20", "dex"]
scrt_staking     = ["adapter", "treasury"]
treasury         = ["adapter", "dao-utils"]
treasury_manager = ["adapter"]
rewards_emission = ["adapter"]
lp_shade_swap    = ["interface"]
adapter          = ["interface"]
manager          = ["interface"]
snip20           = ["query_auth_impl", "dep:base64"]
query_auth       = ["interface", "query_auth_lib", "dep:remain"]
snip20_staking   = ["interface", "implementation"]#TODO: fix messy feature
sky              = ["snip20", "dex", "dao"]
dao              = ["interface", "cosmwasm-std/staking"]
shade_admin      = ["dep:shade-admin"]

stargate = ["cosmwasm-std/stargate"]
staking = ["cosmwasm-std/staking"]

# Protocol Implementation Contracts
# Used in internal smart contracts
governance-impl = ["implementation", "governance"]
snip20-impl     = ["snip20", "query_auth_impl"]
query_auth_impl = ["implementation", "query_auth", "dep:base64"]
sky-utils        = ["implementation", "sky"]

# for quicker tests, cargo test --lib
# for more explicit tests, cargo test --features=backtraces
backtraces = ["cosmwasm-std/backtraces"]
debug-print = [] # TODO: remove this from all cargo configs

[dependencies]
cosmwasm-std = { git = "https://github.com/scrtlabs/cosmwasm", branch = "secret" }
cosmwasm-storage = { git = "https://github.com/scrtlabs/cosmwasm", branch = "secret" }
cosmwasm-schema = { git = "https://github.com/CosmWasm/cosmwasm", commit = "1e05e7e" }

schemars = "0.8.9"
serde = { version = "1.0.103", default-features = false, features = ["derive", "alloc"] }
thiserror = "1.0"

shade-admin = { git = "https://github.com/securesecrets/shadeadmin", optional = true }
secret-storage-plus = { git = "https://github.com/securesecrets/secret-plus-utils", version = "0.13.4", optional = true }
# Testing
secret-multi-test = { git = "https://github.com/securesecrets/secret-plus-utils", version = "0.13.4", optional = true, features = ["staking"] }
anyhow = { version = "1", optional = true }
fadroma = { branch = "v100", commit = 76867e0, git = "https://github.com/hackbg/fadroma.git", features= ["ensemble"], optional = true }


# TODO: fix import
chrono = "0.4.19"
base64 = { version = "0.12.3", optional = true }
#query-authentication = {git = "https://github.com/securesecrets/query-authentication", tag = "v1.3.0", optional = true }
query-authentication = { git = "https://github.com/securesecrets/query-authentication", branch = "cosmwasm_v1_upgrade", optional = true }
remain = { version = "0.2.2", optional = true }
subtle = { version = "2.2.3", default-features = false }
sha2 = { version = "0.9.1", default-features = false }
rand_chacha = { version = "0.2.2", default-features = false }
rand_core = { version = "0.5.1", default-features = false }

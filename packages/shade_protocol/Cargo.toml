[package]
name = "shade-protocol"
version = "0.1.0"
authors = [
  "Guy Garcia <guysebastiangarcia@gmail.com>",
  "Jackson Swenson <jacksonswenson22@gmail.com>",
  "Kyle Wahlberg <kyle.s.wahlberg@gmail.com>"
]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["utils"]

# Templates
dex = ["utils", "math", "snip20", "mint", "band"]
band = []
snip20 = ["utils", "dep:remain", "dep:query-authentication"]

# Utils
utils = []
errors = []
flexible_msg = []
math = []
storage = ["cosmwasm-storage/iterator"]
storage_plus = ["dep:secret-storage-plus"]

# Protocol contracts
airdrop = ["utils", "errors", "dep:remain", "dep:query-authentication"]
initializer = ["snip20", "utils"]
bonds = ["utils", "errors", "dep:remain", "oracle", "airdrop", "dep:query-authentication", "snip20"]
governance = ["utils", "flexible_msg"]
mint = ["utils", "snip20"]
mint_router = ["utils", "snip20"]
oracle = ["snip20", "dex"]
scrt_staking= ["utils", "adapter", "treasury"]
treasury = ["utils", "adapter", "snip20"]
treasury_manager = ["adapter"]
rewards_emission = ["adapter"]
lp_shade_swap = []
adapter = []
snip20_staking = ["utils"]
sky = ["snip20", "utils", "sienna"]

# Protocol Implementation Contracts
# Used in internal smart contracts
governance-impl = ["governance", "storage"]
sky-impl = ["sky", "storage_plus"]

# for quicker tests, cargo test --lib
# for more explicit tests, cargo test --features=backtraces
backtraces = ["cosmwasm-std/backtraces"]
debug-print = ["cosmwasm-std/debug-print"]

[dependencies]
cosmwasm-std = { version = "0.10", package = "secret-cosmwasm-std" }
cosmwasm-storage = { version = "0.10", package = "secret-cosmwasm-storage" }
cosmwasm-math-compat = { path = "../cosmwasm_math_compat" }
cosmwasm-schema = "0.10.1"
secret-toolkit = { version = "0.2" }
schemars = "0.7"
serde = { version = "1.0.103", default-features = false, features = ["derive"] }
snafu = { version = "0.6.3" }
# TODO: fix import
chrono = "0.4.19"
# Needed for transactions
query-authentication = {git = "https://github.com/securesecrets/query-authentication", tag = "v1.2.0", optional = true }
remain = { version = "0.2.2", optional = true }
subtle = { version = "2.2.3", default-features = false }
sha2 = { version = "0.9.1", default-features = false }
rand_chacha = { version = "0.2.2", default-features = false }
rand_core = { version = "0.5.1", default-features = false }
base64 = "0.12.3"
secret-storage-plus = { git = "https://github.com/securesecrets/secret-storage-plus", tag = "v1.0.0", optional = true }
